<div class="table-data">
	<div class="order">
		<div>
			<div class="" style="display: inline-block;">
				<h3>Recent Activities</h3>
			</div>
			<div style="font-size: x-small;float: right;">
				
				<div style="font-size: x-small; display: inline-block;">
					<input class="form-control search-input" id="custom-search" placeholder="Search">
					<button style="width: 150px;" class="btn btn-secondary dropdown-toggle" type="button" id="monthDropdown" data-bs-toggle="dropdown" aria-expanded="false">
						<i class="bi bi-calendar2-month"></i> Select Month</button>
						<ul class="dropdown-menu" id="selectedmonth" aria-labelledby="monthDropdown">
						<li data-month="None" class="dropdown-item">Select Month</li>
						<li data-month="January" class="dropdown-item">January</li>
						<li data-month="February" class="dropdown-item">February</li>
						<li data-month="March" class="dropdown-item">March</li>
						<li data-month="April" class="dropdown-item">April</li>
						<li data-month="May" class="dropdown-item">May</li>
						<li data-month="June" class="dropdown-item">June</li>
						<li data-month="July" class="dropdown-item">July</li>
						<li data-month="August" class="dropdown-item">August</li>
						<li data-month="September" class="dropdown-item">September</li>
						<li data-month="October" class="dropdown-item">October</li>
						<li data-month="November" class="dropdown-item">November</li>
						<li data-month="December"class="dropdown-item">December</li>
					</ul>
				</div>
				<div style="font-size: x-small; display: inline-block;">
					<button style="width: 150px;" class="btn btn-secondary dropdown-toggle" type="button" 
					id="yearDropdown" data-bs-toggle="dropdown" aria-expanded="false">
						<i class="bi bi-calendar2-week"></i> Select Year</button>
					<ul class="dropdown-menu" id="yearSelect" aria-labelledby="yearDropdown">
						<li data-year="None"class="dropdown-item">Select Year</li>
						<!-- Year options will be generated dynamically -->
					</ul>
				</div>	
			</div>
		</div>
		
		<% if (typeof error !== 'undefined' && error) { %>
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <strong>Error!</strong> <%= error %>.
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
              </div>
        <% } else if ((typeof error !== 'undefined' && success)) { %>
			<div class="alert alert-success alert-dismissible fade show" role="alert">
                <strong>Successfully!</strong> <%= success %>.
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
              </div>
        <% } %>
		<table id="HistoryTable">
			<thead>
				<tr>
					<th class="text-center">#</th>
					<th class="text-center">Started By</th>
					<th class="text-center">Stopped By</th>
					<th class="text-center">Drying Title</th>
					<th class="text-center">Item Name</th>
					<th class="text-center">Item Quantity</th>
					<th class="text-center">Start Time</th>
					<th class="text-center">End Time</th>
					<th class="text-center">Duration</th>
					<th class="text-center">Download</th>
				</tr>
			</thead>
			<tbody>
				<% if (onGoingTimers) { %>
				<tr>
					<td class="text-center">
						<p2>1.</p2>
						<p2><img src="<%= onGoingTimers.UserProfPic?  onGoingTimers.UserProfPic : '/Default.webp' %>"></p2>
					</td>
					<td class="text-center">
						<p2><%= onGoingTimers.UserName %></p2>
					</td>
					<td class="text-center">Not Yet Done</td>
					<td class="text-center"><%= onGoingTimers.DryingTitle %></td>
					<td class="text-center"><%= onGoingTimers.ItemName %></td>
					<td class="text-center"><span><%= onGoingTimers.ItemQuantity %></span></td>
					<td class="text-center"><span><%= new Date(onGoingTimers.startTime).toLocaleString('en-US', {timeZone: 'Asia/Manila'}) %></span></td>
					<td class="text-center"><span><%= onGoingTimers.endTime ? new Date(onGoingTimers.endTime).toLocaleString('en-US', {timeZone: 'Asia/Manila'}) : 'N/A' %></span></td>
					<td class="text-center"><span id=></span></td>
					<td class="text-center">
						
					</td>
				</tr>
				<% } %>
				
				<% MyHistory.forEach((history, index) => { %>
					<tr>
						<td class="text-center">
							<% if (onGoingTimers) { %>
								<p2><%= index + 2 %>.</p2>
							<% } else {  %>
							<p2><%= index + 1 %>.</p2>
							<% } %>
							<p2><img src="<%= history.UserProfPic?  history.UserProfPic : '/Default.webp' %>"></p2>
						</td>
						<td class="text-center">
							<p2><%= history.UserName %></p2>
						</td>
						<td class="text-center">
							<p2><%= history.SubmitBy %></p2>
						</td>
						<td class="text-center"><%= history.DryingTitle %></td>
						<td class="text-center"><%= history.ItemName %></td>
						<td class="text-center"><span><%= history.ItemQuantity %></span></td>
						<td class="text-center">
							<span>
								<%= new Date(history.startTime).toLocaleString('en-US', {
									timeZone: 'Asia/Manila',
									month: 'long',
									day: '2-digit',
									year: 'numeric',
									hour: 'numeric',
									minute: 'numeric',
									hour12: true,
									hourCycle: 'h23', // Use 24-hour clock
								}).replace(' at ', ', ') %>
							</span>
						</td>
						<td class="text-center">
							<span>
								<%= new Date(history.stopTime).toLocaleString('en-US', {
									timeZone: 'Asia/Manila',
									month: 'long',
									day: '2-digit',
									year: 'numeric',
									hour: 'numeric',
									minute: 'numeric',
									hour12: true,
									hourCycle: 'h23',
								}).replace(' at ', ', ') %>
							</span>
						</td>
						<td class="text-center"><span id="Duration<%= index %>"></span></td>
						<td class="text-center">
							<button style="background-color: #800000; margin-left: 30px; margin-right: 10px;" class="btn btn-danger" id="downloadPDFButton<%= history._id %>">Download</button>
						</td>
					</tr>
				<% }); %>
			</tbody>
		</table>
	</div>	
</div>

<div class="table-data">
    <div class="order">
        <div>
            <div class="" style="display: inline-block;">
                <h3>Activity Logs</h3>
            </div>
            <div style="font-size: x-small; float: right;">
                <div style="font-size: x-small; display: inline-block;">
                    <input class="form-control search-input" id="log_custom-search" placeholder="Search">
                    <button style="width: 150px;" class="btn btn-secondary dropdown-toggle" type="button"
                        id="log_monthDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-calendar2-month"></i> Select Month</button>
                    	<ul class="dropdown-menu" id="log_selectedMonth" aria-labelledby="log_monthDropdown">
                        <li data-monthlog="None" class="dropdown-item">Select Month</li>
                        <li data-monthlog="January" class="dropdown-item">January</li>
                        <li data-monthlog="February" class="dropdown-item">February</li>
                        <li data-monthlog="March" class="dropdown-item">March</li>
                        <li data-monthlog="April" class="dropdown-item">April</li>
                        <li data-monthlog="May" class="dropdown-item">May</li>
                        <li data-monthlog="June" class="dropdown-item">June</li>
                        <li data-monthlog="July" class="dropdown-item">July</li>
                        <li data-monthlog="August" class="dropdown-item">August</li>
                        <li data-monthlog="September" class="dropdown-item">September</li>
                        <li data-monthlog="October" class="dropdown-item">October</li>
                        <li data-monthlog="November" class="dropdown-item">November</li>
                        <li data-monthlog="December" class="dropdown-item">December</li>
                    </ul>
                </div>
                <div style="font-size: x-small; display: inline-block;">
                    <button style="width: 150px;" class="btn btn-secondary dropdown-toggle" type="button"
                        id="log_yearDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-calendar2-week"></i> Select Year</button>
                    <ul class="dropdown-menu" id="log_yearSelect" aria-labelledby="log_yearDropdown">
                        <li data-yearlog="None" class="dropdown-item">Select Year</li>
                        <!-- Year options will be generated dynamically -->
                    </ul>
                </div>
            </div>
        </div>

        <% if (typeof error !== 'undefined' && error) { %>
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>Error!</strong> <%= error %>.
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        <% } else if ((typeof error !== 'undefined' && success)) { %>
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>Successfully!</strong> <%= success %>.
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        <% } %>
        <table id="ActivityLogTable" class="">
            <thead>
                <tr>
                    <th class="text-center">#</th>
                    <th class="text-center">Action By</th>
                    <th class="text-center">Action</th>
                    <th class="text-center">Description</th>
                    <th class="text-center">Date</th>
                </tr>
            </thead>
            <tbody>
                <% ActivityLogs.forEach((log, index) => { %>
                <tr class="text-center">
                    <td><%= index + 1 %></td>
                    <td><%= log.ActionBy %></td>
                    <td><%= log.Action %></td>
                    <td><%= log.Description %></td>
                    <td><%= new Date(log.createdAt).toLocaleString('en-US', {
                        timeZone: 'Asia/Manila',
                        month: 'long',
                        day: '2-digit',
                        year: 'numeric',
                        hour: 'numeric',
                        minute: 'numeric',
                        hour12: true,
                        hourCycle: 'h23'
                    }).replace(' at ', ', ') %></td>
                </tr>
                <% }); %>
            </tbody>
        </table>
    </div>
</div>

<script>
	function Duration(startTime, endTime) {
		const durationInMillis = new Date(endTime) - new Date(startTime);
		const days = Math.floor(durationInMillis / (24 * 60 * 60 * 1000));
		const hours = Math.floor((durationInMillis % (24 * 60 * 60 * 1000)) / (60 * 60 * 1000));
		const minutes = Math.floor((durationInMillis % (60 * 60 * 1000)) / (60 * 1000));

		return `${days} day/s ${hours} hour/s ${minutes} minute/s`;
	}

	<% MyHistory.forEach((history, index) => { %>
			const startTime<%= index %> = '<%= history.startTime %>';
			const endTime<%= index %> = '<%= history.stopTime %>';
			const duration<%= index %> = Duration(startTime<%= index %>, endTime<%= index %>);
			$('#Duration<%= index %>').text(duration<%= index %>);
	<% }); %>

	$(document).ready(function () {
		var table = $('#HistoryTable').DataTable({
			responsive: true,
			"style": "bootstrap5",
			dom: '<l<"entries-info">>frt<"bottom-search"f>t<"bottom"ip>',
			"columnDefs": [
				{ "orderable": false, "targets": "_all" } // Disable sorting for all columns
			]
		});

		var ActivityLogtable = $('#ActivityLogTable').DataTable({
			responsive: true,
			"style": "bootstrap5",
			dom: '<l<"entries-info">>frt<"bottom-search"f>t<"bottom"ip>',
			"columnDefs": [
				{ "orderable": false, "targets": "_all" } // Disable sorting for all columns
			]
		});


		var currentMonth = '';
		var currentYear = '';

		$('#selectedmonth li').click(function () {
			var selectedMonth = $(this).data('month');
			if (selectedMonth === 'None') {
				currentMonth = '';
			} else {
				currentMonth = selectedMonth;
			}
			filterData();
		});

		$('#yearSelect li').click(function () {
			var selectedYear = $(this).data('year');
			if (selectedYear === 'None') {
				currentYear = '';
			} else {
				currentYear = selectedYear;
			}
			filterData();
		});

		$('#custom-search').on('keyup', function () {
		var searchValue = this.value;
		if (searchValue === '') {
			table.search('').draw();
		} else {
			table.search(searchValue, false, false).draw();
		}

		});
		function filterData() {
			var searchValue = $('#custom-search').val().trim();
			if (currentMonth === '' && currentYear === '' && searchValue === '') {
				table.search('').columns().search('').draw();
			} else {
				// Combine currentMonth and currentYear for filtering
				const filterValue = currentMonth + ' ' + currentYear;
				table.column(6).search(filterValue).draw();
			}
		}

		////////////////////////////
		var log_currentMonth = '';
		var log_currentYear = '';

		$('#log_selectedMonth li').click(function () {
			var log_selectedMonth = $(this).data('monthlog');
			console.log(log_selectedMonth);
			if (log_selectedMonth === 'None') {
				log_currentMonth = '';
			} else {
				log_currentMonth = log_selectedMonth;
			}
			log_filterData();
		});

		$('#log_yearSelect li').click(function () {
			var log_selectedYear = $(this).data('yearlog');
			console.log(log_selectedYear);
			if (log_selectedYear === 'None') {
				log_currentYear = '';
			} else {
				log_currentYear = log_selectedYear;
			}
			log_filterData();
		});

		$('#log_custom-search').on('keyup', function () {
		var log_searchValue = this.value;
		if (log_searchValue === '') {
			ActivityLogtable.search('').draw();
		} else {
			ActivityLogtable.search(log_searchValue, false, false).draw();
		}

		});
		function log_filterData() {
			var log_searchValue = $('#custom-search').val().trim();
			if (log_currentMonth === '' && log_currentYear === '' && log_searchValue === '') {
				ActivityLogtable.search('').columns().search('').draw();
			} else {
				// Combine log_currentMonth and log_currentYear for filtering
				const filterValue = log_currentMonth + ' ' + log_currentYear;
				ActivityLogtable.column(4).search(filterValue).draw();
			}
		}
	});

	const currentYear = new Date().getFullYear();
	for (let year = 2023; year <= currentYear; year++) {
		const option = document.createElement('li');
		option.classList.add('dropdown-item');
		option.setAttribute('data-year', year);
		option.textContent = year;
		document.getElementById('yearSelect').appendChild(option);
	}
	// Get the year dropdown button and menu
	const yearDropdownButton = document.getElementById('yearDropdown');
	const yearDropdownMenu = document.getElementById('yearSelect');
	// Add click event listeners to each year dropdown item
	yearDropdownMenu.querySelectorAll('.dropdown-item').forEach(item => {
		item.addEventListener('click', () => {
			// Set the button text to the selected year
			yearDropdownButton.innerHTML = `<i class="bi bi-calendar2-week"></i> ${item.textContent}`;
		});
	});
	const button = document.getElementById('monthDropdown');
	const dropdownMenu = button.nextElementSibling;
	dropdownMenu.querySelectorAll('.dropdown-item').forEach(item => {
		item.addEventListener('click', () => {
			// Set the button text to the selected month
			button.innerHTML = `<i class="bi bi-calendar2-month"></i> ${item.textContent}`;
		});
	});

	// ActivityLog Script Below

	const log_currentYear = new Date().getFullYear();
	for (let year = 2023; year <= log_currentYear; year++) {
		const option = document.createElement('li');
		option.classList.add('dropdown-item');
		option.setAttribute('data-yearlog', year);
		option.textContent = year;
		document.getElementById('log_yearSelect').appendChild(option);
	}
	const log_yearDropdownButton = document.getElementById('log_yearDropdown');
	const log_yearDropdownMenu = document.getElementById('log_yearSelect');
	log_yearDropdownMenu.querySelectorAll('.dropdown-item').forEach(item => {
		item.addEventListener('click', () => {
			log_yearDropdownButton.innerHTML = `<i class="bi bi-calendar2-week"></i> ${item.textContent}`;
		});
	});
	const log_button = document.getElementById('log_monthDropdown');
	const log_dropdownMenu = log_button.nextElementSibling;

	log_dropdownMenu.querySelectorAll('.dropdown-item').forEach(item => {
		item.addEventListener('click', () => {
			log_button.innerHTML = `<i class="bi bi-calendar2-month"></i> ${item.textContent}`;
		});
	});
	// End of ActivityLog Script
	
	document.addEventListener('DOMContentLoaded', () => {
	  <% MyHistory.forEach((history) => { %>
		document.getElementById('downloadPDFButton<%= history._id %>').addEventListener('click', async () => {
		  try {
			const response = await fetch('/downloadSensorDataPDF?id=<%= history._id %>');
			
			if (!response.ok) {
			  throw new Error(`Failed to fetch sensor data PDF: ${response.statusText}`);
			}
  
			// Check if the response Content-Type is application/pdf
			const contentType = response.headers.get('Content-Type');
			if (contentType !== 'application/pdf') {
			  throw new Error(`Expected PDF content type, received ${contentType}`);
			}
  
			const blob = await response.blob();
			const link = document.createElement('a');
  
			link.href = window.URL.createObjectURL(blob);
			
			// Extract Drying Title from history object
			const dryingTitle = '<%= history.DryingTitle %>';
  
			// Format filename with Date, Time, and Drying Title
			const date = new Date().toLocaleString('en-US', {
			  hour12: false,
			  hour: '2-digit',
			  minute: '2-digit',
			  second: '2-digit',
			  month: 'short',
			  day: '2-digit',
			  year: 'numeric'
			}).replace(/:/g, '-').replace(/,/g, '').replace(/ /g, '_');
			
			let filename = `${dryingTitle}_sensor_data_${date}.pdf`;
			console.log('Title: ', dryingTitle);
  
			link.download = filename;
  
			document.body.appendChild(link);
			link.click();
			document.body.removeChild(link);
		  } catch (error) {
			console.error('Error during PDF download:', error);
		  }
		});
	  <% }); %>
	});
</script>
