
<% if (timerInfo) { %>
    <script src="https://cdn.socket.io/4.0.0/socket.io.min.js"></script>
    <script>
        const socket = io();
        let activeSource = '';
		let DHactiveSource = '';

        socket.on('mqttMessage', (payload) => {
			if (payload.topic === 'MYMQTTDRYER/TemperatureHumidityTopic') {
				// console.log("Received from MYMQTTDRYER/TemperatureHumidityTopic");
				const messageObj = JSON.parse(payload.message);
				// console.log(`Temperature values:`);
				for (let i = 0; i < messageObj.Temperature.length; i++) {
					document.getElementById('Temperature' + i).value = messageObj.Temperature[i];
					// console.log(`Index ${i}: ${messageObj.Temperature[i]}`);
				}
				// console.log(`Humidity values:`);
				for (let i = 0; i < messageObj.Humidity.length; i++) {
					document.getElementById('Humidity' + i).value = messageObj.Humidity[i];
					// console.log(`Index ${i}: ${messageObj.Humidity[i]}`);
				}
			} else if (payload.topic === "MYMQTTDRYER/ESPState") {
				const espState = payload.message;
				document.getElementById('espState').innerText = `${espState}`;
			}
		});
	</script>
	

<div id="passwordHelpBlock" class="form-text" >
    Drying in progress.
</div>

<!-- The Counting Down Time Remaining should display below with the id="timeRemaining" -->
<div class="form-text overflow-auto">
    <div id="passwordHelpBlock" class="form-text">
        Time Remaining:
        <span id="timeRemaining">
            <% if (timerInfo.endTime === null) { %>
                Free Time
            <% } %>
        </span> 
    </div>
</div>

<% } else { %>
<div id="passwordHelpBlock" class="form-text" >
    Begin Drying.
</div>
<% } %>


<% if (typeof error !== 'undefined' && error) { %>
	<div class="alert alert-danger alert-dismissible fade show" role="alert">
		<strong>Error!</strong> <%= error %>.
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
	</div>
<% } else if ((typeof error !== 'undefined' && success)) { %>
	<div class="alert alert-success alert-dismissible fade show" role="alert">
		<strong>Successfully!</strong> <%= success %>.
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
	</div>
<% } %>

<form id="finishDryingForm" action="/FinishDrying" method="POST">
	<div class="box-info">
		<li style="overflow: hidden;">
			<i class='bx bx-baguette' ></i>
			<span class="text">
				<% if (timerInfo) { %>
					<p>Item</p>
					<div class="overflow-y-hidden"><%= timerInfo.ItemName %></div>
					<input type="text" value="<%= timerInfo.id %>" style="overflow: hidden;margin-top: 20px;"name="DryingID" id="id" class="input-b" hidden>
					<input type="text" value="<%= timerInfo.ItemName %>" style="overflow: hidden;margin-top: 20px;"name="ItemName" id="ItemsName" class="input-b" hidden>
				<% } else { %>
					<!-- Handle the case where timerInfo is null -->
					<p>Item</p>
					<p>No item being dry.</p>
				<% } %>
			</span>
		</li>
		<li>
			<i class='bx bi-infinity'></i>
			<span class="text">
			<% if (timerInfo) { %>
				<p>Quantity</p>
				<div class="overflow-y-hidden"><%= timerInfo.ItemQuantity %></div>
				<input type="text" value="<%= timerInfo.ItemQuantity %>" style="overflow-wrap: auto; margin-top: 20px;" name="endTime" id="ItemsQuantity" class="input-b" hidden>
			<% } else { %>
				<!-- Handle the case where timerInfo is null -->
				<p>Quantity</p>
				<p>No item being dry.</p>
			<% } %>
			</span>
		</li>
		<li>
			<i class='bx bi-hourglass-top'></i>
			<span class="text">
				<% if (timerInfo) { %>
					<p>Start Time</p>
					<div class="overflow-y-hidden"><%= new Date(timerInfo.startTime).toLocaleString('en-US', {timeZone: 'Asia/Manila'})%></div>
					<input type="datetime" value="<%= timerInfo.startTime %>" style="overflow-x: auto; margin-top: 20px;" name="startTime" id="name" class="input-b" hidden>
				<% } else { %>
					<!-- Handle the case where timerInfo is null -->
					<p>Start Time</p>
					<p>No active timer.</p>
				<% } %>
			</span>
		</li>
		<li>
			<i class='bx bi-hourglass-bottom'></i>
			<span class="text">
			<% if (timerInfo) { %>
				<p>End Time</p>
				<div class="overflow-y-hidden"><%= new Date(timerInfo.endTime).toLocaleString('en-US', {timeZone: 'Asia/Manila'})%></div>
				<input type="datetime" value="<%= timerInfo.endTime %>" style="overflow-wrap: auto; margin-top: 20px;" name="endTime" id="endTime" class="input-b" hidden>
				<input type="text" value="<%= timerInfo.TimeMode %>" style="overflow-wrap: auto; margin-top: 20px;" name="TimeMode" id="TimesMode" class="input-b" hidden>
			<% } else { %>
				<!-- Handle the case where timerInfo is null -->
				<p>End Time</p>
				<p>No active timer.</p>
			<% } %>
			</span>
		</li>
	</div>


<div class="table-data">
	<div class="order">
		<div class="">
			<h3>Temperature/Humidity 
				<button type="button" class="btn btn-warning" style="background-color:transparent; border-radius: 10px; width: 45px;border:1px solid rgb(255, 179, 0);" id="liveToastBtn">
					<i style="color: rgb(255, 179, 0);" class="bi bi-question-circle"></i>
				</button>
			</h3>
			<div class="toast-container position-fixed top-0 end-0 p-3"  tabindex="0" style="z-index: 3000;">
				<div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="5000" data-bs-autohide="true">
					<div class="toast-header">
					<small class="me-auto">Help?</small>
					<button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
					</div>
					<div class="toast-body">
						U/B . R/L= Upper/Bottom . Right/Left, TP/RH = Temprture/RelativeHumidity, -1/-2 = Check (Sensor / Wiring)
					</div>
				</div>
			</div>
		</div>
		<table id="ProfileTable">
			<thead>
				<tr>
					<th>
						<td>
							<div class="input-group">
								<input value="Average TP(&deg;C)/RH(%)" type="text" aria-label="First name" style="border-left: solid 0px #800000;border-bottom: 0px; border-bottom-left-radius: 0;" class="form-control text-center" readonly disabled>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Temperature13" name="Temperature13" class="form-control text-center" readonly>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Humidity13" name="Humidity13" class="form-control text-center" readonly>
							</div>
						</td>
					</th>
				</tr>
				<tr>
					<th>
						<td>
							<div class="input-group">
								<input value="Room TP(&deg;C)/RH(%)" type="text" aria-label="First name" style="border-left: solid 0px #800000;border-bottom: 0px; border-bottom-left-radius: 0;" class="form-control text-center" readonly disabled>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Temperature12" name="Temperature12" class="form-control text-center" readonly>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Humidity12" name="Humidity12" class="form-control text-center" readonly>
							</div>
						</td>
					</th>
				</tr>
				<tr>
					<th>
						<td class="text-center">
							<div class="input-group">
								<input value="Position" type="text" aria-label="First name" style="border: 0px; border-top: #800000 solid 10px; border-left: #800000 solid 10px" class="form-control text-center" readonly disabled>
								<input value="Front" type="text" aria-label="First name" style="border: 0px; border-top: #800000 solid 10px;" class="form-control text-center" readonly disabled>
								<input value="Center" type="text" aria-label="Last name" style="border: 0px; border-top: #800000 solid 10px;" class="form-control text-center" readonly disabled>
								<input value="Rear" type="text" aria-label="Last name" style="border: 0px; border-top: #800000 solid 10px;" class="form-control text-center" readonly disabled>
							</div>
						</td>
					</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<th>
						<td class="text-center">
							<div class="input-group">
								<input value="U.R TP (&deg;C)" type="text" aria-label="First name" style="border-left: solid 10px #800000;border-bottom: 0px; border-bottom-left-radius: 0;" class="form-control text-center" readonly disabled>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="First name" style="border: 0px;" id="Temperature0" name="Temperature0" class="form-control text-center" readonly>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Temperature1" name="Temperature1" class="form-control text-center" readonly>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Temperature2" name="Temperature2" class="form-control text-center" readonly>
							</div>
							<div class="input-group">
								<input value="U.R RH (%)" type="text" aria-label="First name" style="border-left: solid 10px #800000;border-top: 0px; border-top-left-radius: 0;" class="form-control text-center" readonly disabled>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="First name" style="border: 0px;" id="Humidity0" name="Humidity0" class="form-control text-center" readonly>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Humidity1" name="Humidity1" class="form-control text-center" readonly>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Humidity2" name="Humidity2" class="form-control text-center" readonly>
							</div>
						</td>
					</th>
				</tr>
				<tr>
					<th>
						<td class="text-center">
							<div class="input-group">
								<input value="B.R TP (&deg;C)" type="text" aria-label="First name" style="border-left: solid 10px #800000;border-bottom: 0px; border-bottom-left-radius: 0;" class="form-control text-center" readonly disabled>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="First name" style="border: 0px;" id="Temperature3" name="Temperature3" class="form-control text-center" readonly>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Temperature4" name="Temperature4" class="form-control text-center" readonly>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Temperature5" name="Temperature5" class="form-control text-center" readonly>
							</div>
							<div class="input-group">
								<input value="B.R RH (%)" type="text" aria-label="First name" style="border-left: solid 10px #800000;border-top: 0px; border-top-left-radius: 0;" class="form-control text-center" readonly disabled>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="First name" style="border: 0px;" id="Humidity3" name="Humidity3" class="form-control text-center" readonly>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Humidity4" name="Humidity4" class="form-control text-center" readonly>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Humidity5" name="Humidity5" class="form-control text-center" readonly>
							</div>
						</td>
					</th>
				</tr>
				<tr>
					<th>
						<td class="text-center">
							<div class="input-group">
								<input value="U.L TP (&deg;C)" type="text" aria-label="First name" style="border-left: solid 10px #800000;border-bottom: 0px; border-bottom-left-radius: 0;" class="form-control text-center" readonly disabled>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="First name" style="border: 0px;" id="Temperature6" name="Temperature6" class="form-control text-center" readonly>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Temperature7" name="Temperature7" class="form-control text-center" readonly>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Temperature8" name="Temperature8" class="form-control text-center" readonly>
							</div>
							<div class="input-group">
								<input value="U.L RH (%)" type="text" aria-label="First name" style="border-left: solid 10px #800000;border-top: 0px; border-top-left-radius: 0;" class="form-control text-center" readonly disabled>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="First name" style="border: 0px;" id="Humidity6" name="Humidity6" class="form-control text-center" readonly>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Humidity7" name="Humidity7" class="form-control text-center" readonly>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Humidity8" name="Humidity8" class="form-control text-center" readonly>
							</div>
						</td>
					</th>
				</tr>
				<tr>
					<th>
						<td class="text-center">
							<div class="input-group">
								<input value="B.L TP (&deg;C)" type="text" aria-label="First name" style="border-left: solid 10px #800000;border-bottom: 0px; border-bottom-left-radius: 0;" class="form-control text-center" readonly disabled>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="First name" style="border: 0px;" id="Temperature9" name="Temperature9" class="form-control text-center" readonly>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Temperature10" name="Temperature10" class="form-control text-center" readonly>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Temperature11" name="Temperature11" class="form-control text-center" readonly>
							</div>
							<div class="input-group">
								<input value="B.L RH (%)" type="text" aria-label="First name" style="border-left: solid 10px #800000;border-top: 0px; border-top-left-radius: 0;" class="form-control text-center" readonly disabled>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="First name" style="border: 0px;" id="Humidity9" name="Humidity9" class="form-control text-center" readonly>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Humidity10" name="Humidity10" class="form-control text-center" readonly>
								<input value="<%= timerInfo ? -5:'N/A' %>" type="text" aria-label="Last name" style="border: 0px;" id="Humidity11" name="Humidity11" class="form-control text-center" readonly>
							</div>
						</td>
					</th>
				</tr>
			</tbody>	
		</table>
	</div>	
</div>
</form>
<!-- Modal -->
<script>
    function updateDuration() {
        var userDateTime = document.getElementById('duration').value;

        if (!userDateTime) {
            var durationDisplay = document.getElementById('durationDisplay');
            durationDisplay.innerHTML = '<strong>Duration:</strong>';
            return;
        }

        var userDate = new Date(userDateTime);
        var currentDate = new Date();
        var durationMillis = userDate - currentDate;
        var days = Math.floor(durationMillis / (24 * 60 * 60 * 1000));
        var hours = Math.floor((durationMillis % (24 * 60 * 60 * 1000)) / (60 * 60 * 1000));
        var minutes = Math.floor((durationMillis % (60 * 60 * 1000)) / (60 * 1000));
        var seconds = Math.floor((durationMillis % (60 * 1000)) / 1000);

        var durationDisplay = document.getElementById('durationDisplay');
        durationDisplay.innerHTML = `<strong>Time Duration:</strong> ${days} days, ${hours} hours, ${minutes} minutes, ${seconds} seconds`;
    }
    function handleModeChange() {
		var modeSelect = document.getElementById("modeSelect");
		var powerSelection = document.getElementById("powerSelection");
		var powerSourceSelect = document.getElementById("powerSourceSelect");

		if (modeSelect.value === "MANUAL") {
			powerSelection.style.display = "block";
			powerSourceSelect.disabled = false; // Enable the dropdown
		} else {
			powerSelection.style.display = "none";
			powerSourceSelect.disabled = true; // Disable the dropdown
		}
	}

	function TimehandleModeChange() {
		var TimeMode = document.getElementById("TimeMode");
		var TimeSelection = document.getElementById("TimeSelection");

		if (TimeMode.value === "TIMER") {
			TimeSelection.style.display = "block";
		} else if (TimeMode.value = "NOTIMER"){
			TimeSelection.style.display = "none";
		}
	}


  window.onload = function () {
    // Extract endTime from timerInfo and convert it to a Date object
    var endTimeString = '<%= timerInfo ? timerInfo.endTime : "" %>';

    // Check if endTimeString is not empty before creating a Date object
    if (endTimeString) {
      var endTime = new Date(endTimeString);

      // Initialize countdown timer with the extracted endTime
      updateRemainingTime(endTime);
    }
  };
</script>


<script>
    function checkTimeValidity() {
    // Check if the selected timer mode is "No Timer"
    var TimeMode = document.getElementById('TimeMode').value;
    if (TimeMode === 'NOTIMER') {
        return true; // Return true to allow form submission without checking time validity
    }
    // Check if days, hours, and minutes are valid numbers and non-negative
    var days = parseInt(document.getElementById('days').value);
    var hours = parseInt(document.getElementById('hours').value);
    var minutes = parseInt(document.getElementById('minutes').value);
	console.log(days,hours,minutes)

    if (isNaN(days) || isNaN(hours) || isNaN(minutes) || (days <= 0 && hours <= 0 && minutes <= 0)) {
        // If any of the values are invalid, show an alert
        document.getElementById('alertMessage').innerText = "Please enter a number greater than '0' for days, hours, and minutes.";
        document.getElementById('alert').style.display = 'block';
        return false; // Prevent form submission
    }

    if (days > 25) {
        document.getElementById('alertMessage').innerText = "Error: Days input limits at 25.";
        document.getElementById('alert').style.display = 'block';
        return false; // Prevent form submission
    }
    if (hours > 23) {
        document.getElementById('alertMessage').innerText = "Error: Hours input limits at 23.";
        document.getElementById('alert').style.display = 'block';
        return false; // Prevent form submission
    }
    if (minutes > 59) {
        document.getElementById('alertMessage').innerText = "Error: Minutes input limits at 59.";
        document.getElementById('alert').style.display = 'block';
        return false; // Prevent form submission
    }
    // Allow form submission
    return true;
}

    // Add an event listener to the form submission
    document.getElementById('startDryingForm').addEventListener('submit', function (event) {
        // Check the validity of the selected time and input values before allowing the form submission
        if (!checkTimeValidity()) {
            // Prevent form submission if the selected time or input values are not valid
            event.preventDefault();
        }
    });
</script>

<% if (timerInfo) { %>
<script>
    document.getElementById("StopDrying").addEventListener("click", function() {
        document.getElementById("finishDryingForm").submit();
    });
</script>

<script>
	function sendDisconnectMessage() {
		const topic = 'MYMQTTDRYER/VoltageController';
		const disconnectValue = document.getElementById('VoltageDisconnect').value;
		const connectValue = document.getElementById('VoltageReconnect').value;

		// Check if the input values are numbers
		if (isNaN(disconnectValue) || isNaN(connectValue)) {
			// Show a bootstrap error
			alert('Please enter valid numbers for Voltage Disconnect and Voltage Reconnect.');
			return;
		}

		// Check if the reconnect value is higher than the disconnect value
		if (parseFloat(connectValue) <= parseFloat(disconnectValue)) {
			// Show a bootstrap error
			alert('Voltage Reconnect value should be higher than Voltage Disconnect value.');
			return;
		}

		// Check if the input values are less than or equal to 100
		if (parseFloat(disconnectValue) > 100 || parseFloat(connectValue) > 100) {
			// Show a bootstrap error
			alert('Disconnect Value Should not be less than 9 and Connect Value shot not be over 14.');
			return;
		}

		const message = JSON.stringify({ VoltageDisconnect: parseFloat(disconnectValue), VoltageReconnect: parseFloat(connectValue) });
		socket.emit('publishVoltage', { topic, message });
	}
</script>
<% } %>
